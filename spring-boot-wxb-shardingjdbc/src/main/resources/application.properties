mybatis-plus.mapper-locations=classpath*:/mapper/*Mapper.xml
# 数据源名称，多数据源以逗号分隔
spring.shardingsphere.datasource.names=m1
# 数据库连接池类名称
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver‐class‐name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/course_db?serverTimezone=GTM%2B8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=123456
#解决一个实体类无法对应两张表，做一个覆盖操作
spring.main.allow-bean-definition-overriding=true
# 配置  表的数据分布情况，配置数据节点
spring.shardingsphere.rules.sharding.tables.course.actual-data-nodes=m1.course$->{0..1}
# 指定t_order表的主键生成策略为SNOWFLAKE
spring.shardingsphere.sharding.tables.course.key‐generator.column=order_id
spring.shardingsphere.sharding.tables.course.key‐generator.type=SNOWFLAKE
# 指定t_order表的分片策略，分片策略包括分片键和分片算法
spring.shardingsphere.sharding.tables.course.table‐strategy.inline.sharding‐column=cid
spring.shardingsphere.sharding.tables.course.table‐strategy.inline.algorithm‐expression=course_$‐>{cid % 2 + 1}
# 打开sql输出日志
spring.shardingsphere.props.sql.show=true


